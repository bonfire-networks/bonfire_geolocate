<main class="h-[250px] overflow-hidden">
  {#if @show_activity && module_enabled?(Bonfire.UI.Social.ActivityLive) && @place}
    <StatefulComponent
      module={maybe_component(Bonfire.UI.Social.ActivityLive, @__context__)}
      id={id(@place) || "unknown-place"}
      object={@place}
    />
  {/if}

  <div class="bg-base-100 shadow w-center">
    <section
      class="map"
      id={"map-" <> e(@place, :id, "unknown")}
      phx-hook="MapLeaflet"
      style="width: 100%; height: 100%"
    >
      <leaflet-map points={"#{inspect(@points)}"}>
        {#for marker <- @markers}
          {#if Map.get(marker, :lat) && Map.get(marker, :long)}
            <leaflet-marker
              lat={marker.lat}
              lng={marker.long}
              selected={e(marker, :is_disabled, false)}
              popup={e(marker, :name, "")}
            >
              <leaflet-icon icon-url={map_icon(e(marker, :is_disabled, false))} width="64" height="64">
              </leaflet-icon>
            </leaflet-marker>
          {/if}
        {/for}

        {!-- 
        <!-- WIP: support more than points -->

        {#for line <- @lines}
          <leaflet-polyline 
            points={"#{inspect(line)}"} 
            color="blue" 
            weight="3"
            popup={e(line, :name, "Line")}
          ></leaflet-polyline>
        {/for}
        
        {#for polygon <- @polygons}
          <leaflet-polygon 
            points={"#{inspect(List.first(polygon))}"} 
            holes={"#{inspect(Enum.slice(polygon, 1..-1))}"} 
            color="green" 
            fill-color="green" 
            fill-opacity="0.4"
            popup={e(polygon, :name, "Polygon")}
          ></leaflet-polygon>
        {/for}
        
        {#for multi_polygon <- @multi_polygons}
          <leaflet-multi-polygon 
            polygons={"#{inspect(multi_polygon)}"} 
            color="purple" 
            fill-color="purple" 
            fill-opacity="0.3"
            popup={e(multi_polygon, :name, "MultiPolygon")}
          ></leaflet-multi-polygon>
        {/for}
         --}
      </leaflet-map>
    </section>
  </div>
</main>